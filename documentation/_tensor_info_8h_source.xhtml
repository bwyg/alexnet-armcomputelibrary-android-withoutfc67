<!-- HTML header for doxygen 1.8.9.1-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.11"/>
<meta name="robots" content="NOINDEX, NOFOLLOW" /> <!-- Prevent indexing by search engines -->
<title>ARM Compute Library: arm_compute/core/TensorInfo.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
  $(window).load(resizeHeight);
</script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX","output/HTML-CSS"],
});
</script><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">ARM Compute Library
   &#160;<span id="projectnumber">17.05</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.11 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="namespaces.xhtml"><span>Namespaces</span></a></li>
      <li><a href="annotated.xhtml"><span>Data&#160;Structures</span></a></li>
      <li class="current"><a href="files.xhtml"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="globals.xhtml"><span>Globals</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('_tensor_info_8h_source.xhtml','');});
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">TensorInfo.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="_tensor_info_8h.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * Copyright (c) 2016, 2017 ARM Limited.</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * SPDX-License-Identifier: MIT</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * Permission is hereby granted, free of charge, to any person obtaining a copy</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * of this software and associated documentation files (the &quot;Software&quot;), to</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> * deal in the Software without restriction, including without limitation the</span></div><div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or</span></div><div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * sell copies of the Software, and to permit persons to whom the Software is</span></div><div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * furnished to do so, subject to the following conditions:</span></div><div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> * The above copyright notice and this permission notice shall be included in all</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * copies or substantial portions of the Software.</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"> * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"> * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE</span></div><div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"> * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER</span></div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"> * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"> * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"> * SOFTWARE.</span></div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#ifndef __ARM_COMPUTE_TENSORINFO_H__</span></div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor">#define __ARM_COMPUTE_TENSORINFO_H__</span></div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;</div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_coordinates_8h.xhtml">arm_compute/core/Coordinates.h</a>&quot;</span></div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_strides_8h.xhtml">arm_compute/core/Strides.h</a>&quot;</span></div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_tensor_shape_8h.xhtml">arm_compute/core/TensorShape.h</a>&quot;</span></div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="_types_8h.xhtml">arm_compute/core/Types.h</a>&quot;</span></div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="arm__compute_2core_2_utils_8h.xhtml">arm_compute/core/Utils.h</a>&quot;</span></div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="preprocessor">#include &lt;cstddef&gt;</span></div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacearm__compute.xhtml">arm_compute</a></div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;{</div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="keyword">class </span>HOGInfo;</div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;</div><div class="line"><a name="l00040"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_tensor_info.xhtml">   40</a></span>&#160;<span class="keyword">class </span><a class="code" href="classarm__compute_1_1_tensor_info.xhtml">TensorInfo</a></div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;{</div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;<span class="keyword">public</span>:</div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;    <a class="code" href="classarm__compute_1_1_tensor_info.xhtml#a21c2ae9fa438faf42669dadda628080c">TensorInfo</a>();</div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;    <span class="keyword">virtual</span> <a class="code" href="classarm__compute_1_1_tensor_info.xhtml#a39cbe92494f53364366a6cddde0b5741">~TensorInfo</a>() = <span class="keywordflow">default</span>;</div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;    <a class="code" href="classarm__compute_1_1_tensor_info.xhtml#a21c2ae9fa438faf42669dadda628080c">TensorInfo</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_tensor_info.xhtml">TensorInfo</a> &amp;) = <span class="keywordflow">default</span>;</div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    <a class="code" href="classarm__compute_1_1_tensor_info.xhtml">TensorInfo</a> &amp;<a class="code" href="classarm__compute_1_1_tensor_info.xhtml#adcf156ba30ff118c28690671e83ea06b">operator=</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_tensor_info.xhtml">TensorInfo</a> &amp;) = <span class="keywordflow">default</span>;</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;    <a class="code" href="classarm__compute_1_1_tensor_info.xhtml#a21c2ae9fa438faf42669dadda628080c">TensorInfo</a>(<a class="code" href="classarm__compute_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&amp;) = <span class="keywordflow">default</span>;</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    <a class="code" href="classarm__compute_1_1_tensor_info.xhtml">TensorInfo</a> &amp;<a class="code" href="classarm__compute_1_1_tensor_info.xhtml#adcf156ba30ff118c28690671e83ea06b">operator=</a>(<a class="code" href="classarm__compute_1_1_tensor_info.xhtml">TensorInfo</a> &amp;&amp;) = <span class="keywordflow">default</span>;</div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;    <a class="code" href="classarm__compute_1_1_tensor_info.xhtml#a21c2ae9fa438faf42669dadda628080c">TensorInfo</a>(<span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> width, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> height, <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58">Format</a> <a class="code" href="classarm__compute_1_1_tensor_info.xhtml#a0c875a3203d902e2ad6bc3045355e69e">format</a>);</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;    <a class="code" href="classarm__compute_1_1_tensor_info.xhtml#a21c2ae9fa438faf42669dadda628080c">TensorInfo</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a> &amp;<a class="code" href="classarm__compute_1_1_tensor_info.xhtml#af3374fa8fcc6d226dc2b82317ab4d079">tensor_shape</a>, <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58">Format</a> format);</div><div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;    <a class="code" href="classarm__compute_1_1_tensor_info.xhtml#a21c2ae9fa438faf42669dadda628080c">TensorInfo</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a> &amp;tensor_shape, <span class="keywordtype">size_t</span> <a class="code" href="classarm__compute_1_1_tensor_info.xhtml#a330472af42b92ad18b93c06d5b510faa">num_channels</a>, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6">DataType</a> <a class="code" href="classarm__compute_1_1_tensor_info.xhtml#a45cc7b9a37aa9f0e7d479248a27e1f58">data_type</a>, <span class="keywordtype">size_t</span> <a class="code" href="classarm__compute_1_1_tensor_info.xhtml#aac568c9183b365ddb66417b54ab8bf3d">fixed_point_pos</a> = 0);</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;    <a class="code" href="classarm__compute_1_1_tensor_info.xhtml#a21c2ae9fa438faf42669dadda628080c">TensorInfo</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_h_o_g_info.xhtml">HOGInfo</a> &amp;hog_info, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> width, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> height);</div><div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1_tensor_info.xhtml#a0ae7d318c02e56a3daa9e5e4f9dab117">init</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a> &amp;tensor_shape, <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58">Format</a> format);</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1_tensor_info.xhtml#a0ae7d318c02e56a3daa9e5e4f9dab117">init</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a> &amp;tensor_shape, <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58">Format</a> format, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_strides.xhtml">Strides</a> &amp;<a class="code" href="classarm__compute_1_1_tensor_info.xhtml#a6b157a0e1ca25ef4d682d3bedfeae5f6">strides_in_bytes</a>, <span class="keywordtype">size_t</span> <a class="code" href="classarm__compute_1_1_tensor_info.xhtml#ad590b0e52b0574c9c2fce393ede1fa7a">offset_first_element_in_bytes</a>, <span class="keywordtype">size_t</span> total_size_in_bytes);</div><div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1_tensor_info.xhtml#a0ae7d318c02e56a3daa9e5e4f9dab117">init</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a> &amp;tensor_shape, <span class="keywordtype">size_t</span> num_channels, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6">DataType</a> data_type, <span class="keywordtype">size_t</span> <a class="code" href="classarm__compute_1_1_tensor_info.xhtml#aac568c9183b365ddb66417b54ab8bf3d">fixed_point_pos</a> = 0);</div><div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1_tensor_info.xhtml#a0ae7d318c02e56a3daa9e5e4f9dab117">init</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a> &amp;tensor_shape, <span class="keywordtype">size_t</span> num_channels, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6">DataType</a> data_type, <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_strides.xhtml">Strides</a> &amp;strides_in_bytes, <span class="keywordtype">size_t</span> offset_first_element_in_bytes,</div><div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;              <span class="keywordtype">size_t</span> total_size_in_bytes, <span class="keywordtype">size_t</span> <a class="code" href="classarm__compute_1_1_tensor_info.xhtml#aac568c9183b365ddb66417b54ab8bf3d">fixed_point_pos</a> = 0);</div><div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1_tensor_info.xhtml#a0ae7d318c02e56a3daa9e5e4f9dab117">init</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_h_o_g_info.xhtml">HOGInfo</a> &amp;hog_info, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> width, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> height);</div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;    <span class="keywordtype">size_t</span> <a class="code" href="classarm__compute_1_1_tensor_info.xhtml#a4b7391b7025befbe44b743723feb4a9b">init_auto_padding</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a> &amp;tensor_shape, <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58">Format</a> format);</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;    <span class="keywordtype">size_t</span> <a class="code" href="classarm__compute_1_1_tensor_info.xhtml#a4b7391b7025befbe44b743723feb4a9b">init_auto_padding</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a> &amp;tensor_shape, <span class="keywordtype">size_t</span> num_channels, <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6">DataType</a> data_type, <span class="keywordtype">size_t</span> <a class="code" href="classarm__compute_1_1_tensor_info.xhtml#aac568c9183b365ddb66417b54ab8bf3d">fixed_point_pos</a> = 0);</div><div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;    <span class="keywordtype">size_t</span> <a class="code" href="classarm__compute_1_1_tensor_info.xhtml#a4b7391b7025befbe44b743723feb4a9b">init_auto_padding</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_h_o_g_info.xhtml">HOGInfo</a> &amp;hog_info, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> width, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> height);</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarm__compute_1_1_tensor_info.xhtml#ac7af0020334c69f249f5a2e267a5c4f4">auto_padding</a>();</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarm__compute_1_1_tensor_info.xhtml#a8d37b60af520149481b2c7bbe1d829fd">extend_padding</a>(<span class="keyword">const</span> <a class="code" href="structarm__compute_1_1_border_size.xhtml">PaddingSize</a> &amp;<a class="code" href="classarm__compute_1_1_tensor_info.xhtml#ad13a67d4dbc337c707a76401dc103ff3">padding</a>);</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1_tensor_info.xhtml#a1f4481a2c496ef1d176f305c25f50202">set_format</a>(<a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58">Format</a> format);</div><div class="line"><a name="l00190"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_tensor_info.xhtml#a6c223d48dcc4afd27b6f3932182622b6">  190</a></span>&#160;    <span class="keywordtype">size_t</span> <a class="code" href="classarm__compute_1_1_tensor_info.xhtml#a6c223d48dcc4afd27b6f3932182622b6">dimension</a>(<span class="keywordtype">size_t</span> index)<span class="keyword"> const</span></div><div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;        <span class="keywordflow">return</span> _tensor_shape[index];</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;    }</div><div class="line"><a name="l00198"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_tensor_info.xhtml#a6b157a0e1ca25ef4d682d3bedfeae5f6">  198</a></span>&#160;    <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_strides.xhtml">Strides</a> &amp;<a class="code" href="classarm__compute_1_1_tensor_info.xhtml#a6b157a0e1ca25ef4d682d3bedfeae5f6">strides_in_bytes</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;        <span class="keywordflow">return</span> _strides_in_bytes;</div><div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;    }</div><div class="line"><a name="l00207"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_tensor_info.xhtml#ad590b0e52b0574c9c2fce393ede1fa7a">  207</a></span>&#160;    <span class="keywordtype">size_t</span> <a class="code" href="classarm__compute_1_1_tensor_info.xhtml#ad590b0e52b0574c9c2fce393ede1fa7a">offset_first_element_in_bytes</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;        <span class="keywordflow">return</span> _offset_first_element_in_bytes;</div><div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;    }</div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;    <span class="keywordtype">size_t</span> <a class="code" href="classarm__compute_1_1_tensor_info.xhtml#aaf5cc084e0feafccc97492d688f4e2e2">offset_element_in_bytes</a>(<span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_coordinates.xhtml">Coordinates</a> &amp;pos) <span class="keyword">const</span>;</div><div class="line"><a name="l00223"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_tensor_info.xhtml#aac568c9183b365ddb66417b54ab8bf3d">  223</a></span>&#160;    <span class="keywordtype">size_t</span> <a class="code" href="classarm__compute_1_1_tensor_info.xhtml#aac568c9183b365ddb66417b54ab8bf3d">fixed_point_pos</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;        <span class="keywordflow">return</span> _fixed_point_pos;</div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;    }</div><div class="line"><a name="l00231"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_tensor_info.xhtml#a448f57f9d6aec61b3d85b898affe4a2e">  231</a></span>&#160;    <span class="keywordtype">size_t</span> <a class="code" href="classarm__compute_1_1_tensor_info.xhtml#a448f57f9d6aec61b3d85b898affe4a2e">element_size</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;        <span class="keywordflow">return</span> <a class="code" href="namespacearm__compute.xhtml#abb7e0f23a4f2e63f39433f158dad47ab">data_size_from_type</a>(_data_type) * _num_channels;</div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;    }</div><div class="line"><a name="l00239"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_tensor_info.xhtml#a38382dc1f04d28cab04d921b8324dc07">  239</a></span>&#160;    <span class="keywordtype">size_t</span> <a class="code" href="classarm__compute_1_1_tensor_info.xhtml#a38382dc1f04d28cab04d921b8324dc07">num_dimensions</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;        <span class="keywordflow">return</span> _tensor_shape.<a class="code" href="classarm__compute_1_1_dimensions.xhtml#a0f59f175e7682c7ed5f4ea30ef687834">num_dimensions</a>();</div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;    }</div><div class="line"><a name="l00247"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_tensor_info.xhtml#a330472af42b92ad18b93c06d5b510faa">  247</a></span>&#160;    <span class="keywordtype">size_t</span> <a class="code" href="classarm__compute_1_1_tensor_info.xhtml#a330472af42b92ad18b93c06d5b510faa">num_channels</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;        <span class="keywordflow">return</span> _num_channels;</div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;    }</div><div class="line"><a name="l00255"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_tensor_info.xhtml#af3374fa8fcc6d226dc2b82317ab4d079">  255</a></span>&#160;    <span class="keyword">const</span> <a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a> &amp;<a class="code" href="classarm__compute_1_1_tensor_info.xhtml#af3374fa8fcc6d226dc2b82317ab4d079">tensor_shape</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;        <span class="keywordflow">return</span> _tensor_shape;</div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;    }</div><div class="line"><a name="l00263"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_tensor_info.xhtml#a45cc7b9a37aa9f0e7d479248a27e1f58">  263</a></span>&#160;    <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6">DataType</a> <a class="code" href="classarm__compute_1_1_tensor_info.xhtml#a45cc7b9a37aa9f0e7d479248a27e1f58">data_type</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;        <span class="keywordflow">return</span> _data_type;</div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;    }</div><div class="line"><a name="l00271"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_tensor_info.xhtml#a0c875a3203d902e2ad6bc3045355e69e">  271</a></span>&#160;    <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58">Format</a> <a class="code" href="classarm__compute_1_1_tensor_info.xhtml#a0c875a3203d902e2ad6bc3045355e69e">format</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;        <span class="keywordflow">return</span> _format;</div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;    }</div><div class="line"><a name="l00279"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_tensor_info.xhtml#a4eaec01ba2c12093db609d1034ad0bc1">  279</a></span>&#160;    <span class="keywordtype">size_t</span> <a class="code" href="classarm__compute_1_1_tensor_info.xhtml#a4eaec01ba2c12093db609d1034ad0bc1">total_size</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;        <span class="keywordflow">return</span> _total_size;</div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;    }</div><div class="line"><a name="l00287"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_tensor_info.xhtml#ad13a67d4dbc337c707a76401dc103ff3">  287</a></span>&#160;    <a class="code" href="structarm__compute_1_1_border_size.xhtml">PaddingSize</a> <a class="code" href="classarm__compute_1_1_tensor_info.xhtml#ad13a67d4dbc337c707a76401dc103ff3">padding</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;        <span class="keywordflow">return</span> _padding;</div><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;    }</div><div class="line"><a name="l00295"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_tensor_info.xhtml#a9f7c904411f0871ed5b37eecb1c03de2">  295</a></span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarm__compute_1_1_tensor_info.xhtml#a9f7c904411f0871ed5b37eecb1c03de2">has_padding</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;        <span class="keywordflow">return</span> !_padding.<a class="code" href="structarm__compute_1_1_border_size.xhtml#adffbf97e7b8b64e7cf32f0254cddf3c4">empty</a>();</div><div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;    }</div><div class="line"><a name="l00303"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_tensor_info.xhtml#aa29d70e3b3c82e0857a6be5280b70ee0">  303</a></span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="classarm__compute_1_1_tensor_info.xhtml#aa29d70e3b3c82e0857a6be5280b70ee0">is_resizable</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;        <span class="keywordflow">return</span> _is_resizable;</div><div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;    }</div><div class="line"><a name="l00308"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_tensor_info.xhtml#a951c1a7a29e99b39d59ee44111291c76">  308</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1_tensor_info.xhtml#a951c1a7a29e99b39d59ee44111291c76">set_is_resizable</a>(<span class="keywordtype">bool</span> <a class="code" href="classarm__compute_1_1_tensor_info.xhtml#aa29d70e3b3c82e0857a6be5280b70ee0">is_resizable</a>)</div><div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;    {</div><div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;        _is_resizable = <a class="code" href="classarm__compute_1_1_tensor_info.xhtml#aa29d70e3b3c82e0857a6be5280b70ee0">is_resizable</a>;</div><div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;    }</div><div class="line"><a name="l00316"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_tensor_info.xhtml#ac437ef0718add962a4059fb3b3084c34">  316</a></span>&#160;    <a class="code" href="structarm__compute_1_1_valid_region.xhtml">ValidRegion</a> <a class="code" href="classarm__compute_1_1_tensor_info.xhtml#ac437ef0718add962a4059fb3b3084c34">valid_region</a>()<span class="keyword"> const</span></div><div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;<span class="keyword">    </span>{</div><div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;        <span class="keywordflow">return</span> _valid_region;</div><div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;    }</div><div class="line"><a name="l00321"></a><span class="lineno"><a class="line" href="classarm__compute_1_1_tensor_info.xhtml#a6922a99119f324abe0e16c9678f71922">  321</a></span>&#160;    <span class="keywordtype">void</span> <a class="code" href="classarm__compute_1_1_tensor_info.xhtml#a6922a99119f324abe0e16c9678f71922">set_valid_region</a>(<a class="code" href="structarm__compute_1_1_valid_region.xhtml">ValidRegion</a> <a class="code" href="classarm__compute_1_1_tensor_info.xhtml#ac437ef0718add962a4059fb3b3084c34">valid_region</a>)</div><div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;    {</div><div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;        _valid_region = std::move(valid_region);</div><div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;    }</div><div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;</div><div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;<span class="keyword">private</span>:</div><div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;    std::tuple&lt;Strides, size_t, size_t&gt; calculate_padding_requirements(<span class="keyword">const</span> <a class="code" href="structarm__compute_1_1_border_size.xhtml">PaddingSize</a> &amp;padding);</div><div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;</div><div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;    <span class="keywordtype">size_t</span>      _total_size;</div><div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;    <span class="keywordtype">size_t</span>      _fixed_point_pos;</div><div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;    <span class="keywordtype">size_t</span>      _offset_first_element_in_bytes;</div><div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;    <a class="code" href="classarm__compute_1_1_strides.xhtml">Strides</a>     _strides_in_bytes;</div><div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;    <span class="keywordtype">size_t</span>      _num_channels;</div><div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;    <a class="code" href="classarm__compute_1_1_tensor_shape.xhtml">TensorShape</a> _tensor_shape;</div><div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6">DataType</a>    _data_type;</div><div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;    <a class="code" href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58">Format</a>      _format;</div><div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;    <span class="keywordtype">bool</span>        _is_resizable;</div><div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;    <a class="code" href="structarm__compute_1_1_valid_region.xhtml">ValidRegion</a> _valid_region;</div><div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;    <a class="code" href="structarm__compute_1_1_border_size.xhtml">PaddingSize</a> _padding;</div><div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;};</div><div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;}</div><div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/*__ARM_COMPUTE_TENSORINFO_H__ */</span><span class="preprocessor"></span></div><div class="ttc" id="structarm__compute_1_1_border_size_xhtml_adffbf97e7b8b64e7cf32f0254cddf3c4"><div class="ttname"><a href="structarm__compute_1_1_border_size.xhtml#adffbf97e7b8b64e7cf32f0254cddf3c4">arm_compute::BorderSize::empty</a></div><div class="ttdeci">constexpr bool empty() const </div><div class="ttdoc">Check if the entire border is zero. </div><div class="ttdef"><b>Definition:</b> <a href="_types_8h_source.xhtml#l00156">Types.h:156</a></div></div>
<div class="ttc" id="classarm__compute_1_1_tensor_shape_xhtml"><div class="ttname"><a href="classarm__compute_1_1_tensor_shape.xhtml">arm_compute::TensorShape</a></div><div class="ttdoc">Shape of a tensor. </div><div class="ttdef"><b>Definition:</b> <a href="_tensor_shape_8h_source.xhtml#l00038">TensorShape.h:38</a></div></div>
<div class="ttc" id="classarm__compute_1_1_tensor_info_xhtml_a4b7391b7025befbe44b743723feb4a9b"><div class="ttname"><a href="classarm__compute_1_1_tensor_info.xhtml#a4b7391b7025befbe44b743723feb4a9b">arm_compute::TensorInfo::init_auto_padding</a></div><div class="ttdeci">size_t init_auto_padding(const TensorShape &amp;tensor_shape, Format format)</div><div class="ttdoc">Initialize the metadata structure for the given tensor shape and single-plane format, (Padding is automatically calculated) </div></div>
<div class="ttc" id="classarm__compute_1_1_tensor_info_xhtml_a45cc7b9a37aa9f0e7d479248a27e1f58"><div class="ttname"><a href="classarm__compute_1_1_tensor_info.xhtml#a45cc7b9a37aa9f0e7d479248a27e1f58">arm_compute::TensorInfo::data_type</a></div><div class="ttdeci">DataType data_type() const </div><div class="ttdoc">Data type used for each element of the tensor. </div><div class="ttdef"><b>Definition:</b> <a href="_tensor_info_8h_source.xhtml#l00263">TensorInfo.h:263</a></div></div>
<div class="ttc" id="classarm__compute_1_1_tensor_info_xhtml_ac7af0020334c69f249f5a2e267a5c4f4"><div class="ttname"><a href="classarm__compute_1_1_tensor_info.xhtml#ac7af0020334c69f249f5a2e267a5c4f4">arm_compute::TensorInfo::auto_padding</a></div><div class="ttdeci">bool auto_padding()</div><div class="ttdoc">Update the offset to the first element and the strides to automatically computed values. </div></div>
<div class="ttc" id="structarm__compute_1_1_border_size_xhtml"><div class="ttname"><a href="structarm__compute_1_1_border_size.xhtml">arm_compute::BorderSize</a></div><div class="ttdoc">Container for 2D border size. </div><div class="ttdef"><b>Definition:</b> <a href="_types_8h_source.xhtml#l00129">Types.h:129</a></div></div>
<div class="ttc" id="_types_8h_xhtml"><div class="ttname"><a href="_types_8h.xhtml">Types.h</a></div></div>
<div class="ttc" id="classarm__compute_1_1_tensor_info_xhtml_a951c1a7a29e99b39d59ee44111291c76"><div class="ttname"><a href="classarm__compute_1_1_tensor_info.xhtml#a951c1a7a29e99b39d59ee44111291c76">arm_compute::TensorInfo::set_is_resizable</a></div><div class="ttdeci">void set_is_resizable(bool is_resizable)</div><div class="ttdoc">Set the flag whether the tensor size can be changed. </div><div class="ttdef"><b>Definition:</b> <a href="_tensor_info_8h_source.xhtml#l00308">TensorInfo.h:308</a></div></div>
<div class="ttc" id="classarm__compute_1_1_h_o_g_info_xhtml"><div class="ttname"><a href="classarm__compute_1_1_h_o_g_info.xhtml">arm_compute::HOGInfo</a></div><div class="ttdoc">Store the HOG&amp;#39;s metadata. </div><div class="ttdef"><b>Definition:</b> <a href="_h_o_g_info_8h_source.xhtml#l00035">HOGInfo.h:35</a></div></div>
<div class="ttc" id="classarm__compute_1_1_tensor_info_xhtml_a448f57f9d6aec61b3d85b898affe4a2e"><div class="ttname"><a href="classarm__compute_1_1_tensor_info.xhtml#a448f57f9d6aec61b3d85b898affe4a2e">arm_compute::TensorInfo::element_size</a></div><div class="ttdeci">size_t element_size() const </div><div class="ttdoc">Element size in bytes calculated as data_size() * num_channels. </div><div class="ttdef"><b>Definition:</b> <a href="_tensor_info_8h_source.xhtml#l00231">TensorInfo.h:231</a></div></div>
<div class="ttc" id="classarm__compute_1_1_tensor_info_xhtml_aaf5cc084e0feafccc97492d688f4e2e2"><div class="ttname"><a href="classarm__compute_1_1_tensor_info.xhtml#aaf5cc084e0feafccc97492d688f4e2e2">arm_compute::TensorInfo::offset_element_in_bytes</a></div><div class="ttdeci">size_t offset_element_in_bytes(const Coordinates &amp;pos) const </div><div class="ttdoc">The offset in bytes from the beginning of the memory allocation to access the element at position (x...</div></div>
<div class="ttc" id="classarm__compute_1_1_tensor_info_xhtml_a39cbe92494f53364366a6cddde0b5741"><div class="ttname"><a href="classarm__compute_1_1_tensor_info.xhtml#a39cbe92494f53364366a6cddde0b5741">arm_compute::TensorInfo::~TensorInfo</a></div><div class="ttdeci">virtual ~TensorInfo()=default</div><div class="ttdoc">Default destructor. </div></div>
<div class="ttc" id="namespacearm__compute_xhtml"><div class="ttname"><a href="namespacearm__compute.xhtml">arm_compute</a></div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_8dox_source.xhtml#l00001">arm_compute.dox:1</a></div></div>
<div class="ttc" id="classarm__compute_1_1_tensor_info_xhtml_a330472af42b92ad18b93c06d5b510faa"><div class="ttname"><a href="classarm__compute_1_1_tensor_info.xhtml#a330472af42b92ad18b93c06d5b510faa">arm_compute::TensorInfo::num_channels</a></div><div class="ttdeci">size_t num_channels() const </div><div class="ttdoc">The number of channels for each tensor element. </div><div class="ttdef"><b>Definition:</b> <a href="_tensor_info_8h_source.xhtml#l00247">TensorInfo.h:247</a></div></div>
<div class="ttc" id="classarm__compute_1_1_tensor_info_xhtml_a0ae7d318c02e56a3daa9e5e4f9dab117"><div class="ttname"><a href="classarm__compute_1_1_tensor_info.xhtml#a0ae7d318c02e56a3daa9e5e4f9dab117">arm_compute::TensorInfo::init</a></div><div class="ttdeci">void init(const TensorShape &amp;tensor_shape, Format format)</div><div class="ttdoc">Initialize the metadata structure with the given parameters. </div></div>
<div class="ttc" id="arm__compute_2core_2_utils_8h_xhtml"><div class="ttname"><a href="arm__compute_2core_2_utils_8h.xhtml">Utils.h</a></div></div>
<div class="ttc" id="classarm__compute_1_1_tensor_info_xhtml_a6c223d48dcc4afd27b6f3932182622b6"><div class="ttname"><a href="classarm__compute_1_1_tensor_info.xhtml#a6c223d48dcc4afd27b6f3932182622b6">arm_compute::TensorInfo::dimension</a></div><div class="ttdeci">size_t dimension(size_t index) const </div><div class="ttdoc">Return the size of the requested dimension. </div><div class="ttdef"><b>Definition:</b> <a href="_tensor_info_8h_source.xhtml#l00190">TensorInfo.h:190</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ab4e88c89b3b7ea1735996cc4def22d58"><div class="ttname"><a href="namespacearm__compute.xhtml#ab4e88c89b3b7ea1735996cc4def22d58">arm_compute::Format</a></div><div class="ttdeci">Format</div><div class="ttdoc">Image colour formats. </div><div class="ttdef"><b>Definition:</b> <a href="_types_8h_source.xhtml#l00038">Types.h:38</a></div></div>
<div class="ttc" id="classarm__compute_1_1_tensor_info_xhtml_af3374fa8fcc6d226dc2b82317ab4d079"><div class="ttname"><a href="classarm__compute_1_1_tensor_info.xhtml#af3374fa8fcc6d226dc2b82317ab4d079">arm_compute::TensorInfo::tensor_shape</a></div><div class="ttdeci">const TensorShape &amp; tensor_shape() const </div><div class="ttdoc">Size for each dimension of the tensor. </div><div class="ttdef"><b>Definition:</b> <a href="_tensor_info_8h_source.xhtml#l00255">TensorInfo.h:255</a></div></div>
<div class="ttc" id="classarm__compute_1_1_coordinates_xhtml"><div class="ttname"><a href="classarm__compute_1_1_coordinates.xhtml">arm_compute::Coordinates</a></div><div class="ttdoc">Coordinates of an item. </div><div class="ttdef"><b>Definition:</b> <a href="_coordinates_8h_source.xhtml#l00037">Coordinates.h:37</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_abb7e0f23a4f2e63f39433f158dad47ab"><div class="ttname"><a href="namespacearm__compute.xhtml#abb7e0f23a4f2e63f39433f158dad47ab">arm_compute::data_size_from_type</a></div><div class="ttdeci">size_t data_size_from_type(DataType data_type)</div><div class="ttdoc">The size in bytes of the data type. </div><div class="ttdef"><b>Definition:</b> <a href="arm__compute_2core_2_utils_8h_source.xhtml#l00098">Utils.h:98</a></div></div>
<div class="ttc" id="classarm__compute_1_1_tensor_info_xhtml_a6922a99119f324abe0e16c9678f71922"><div class="ttname"><a href="classarm__compute_1_1_tensor_info.xhtml#a6922a99119f324abe0e16c9678f71922">arm_compute::TensorInfo::set_valid_region</a></div><div class="ttdeci">void set_valid_region(ValidRegion valid_region)</div><div class="ttdoc">Set the valid region of the tensor. </div><div class="ttdef"><b>Definition:</b> <a href="_tensor_info_8h_source.xhtml#l00321">TensorInfo.h:321</a></div></div>
<div class="ttc" id="classarm__compute_1_1_tensor_info_xhtml_a4eaec01ba2c12093db609d1034ad0bc1"><div class="ttname"><a href="classarm__compute_1_1_tensor_info.xhtml#a4eaec01ba2c12093db609d1034ad0bc1">arm_compute::TensorInfo::total_size</a></div><div class="ttdeci">size_t total_size() const </div><div class="ttdoc">Returns the total size of the tensor in bytes. </div><div class="ttdef"><b>Definition:</b> <a href="_tensor_info_8h_source.xhtml#l00279">TensorInfo.h:279</a></div></div>
<div class="ttc" id="classarm__compute_1_1_strides_xhtml"><div class="ttname"><a href="classarm__compute_1_1_strides.xhtml">arm_compute::Strides</a></div><div class="ttdoc">Strides of an item in bytes. </div><div class="ttdef"><b>Definition:</b> <a href="_strides_8h_source.xhtml#l00038">Strides.h:38</a></div></div>
<div class="ttc" id="_strides_8h_xhtml"><div class="ttname"><a href="_strides_8h.xhtml">Strides.h</a></div></div>
<div class="ttc" id="classarm__compute_1_1_tensor_info_xhtml_aa29d70e3b3c82e0857a6be5280b70ee0"><div class="ttname"><a href="classarm__compute_1_1_tensor_info.xhtml#aa29d70e3b3c82e0857a6be5280b70ee0">arm_compute::TensorInfo::is_resizable</a></div><div class="ttdeci">bool is_resizable() const </div><div class="ttdoc">Flag indicating whether the size of the tensor can be changed. </div><div class="ttdef"><b>Definition:</b> <a href="_tensor_info_8h_source.xhtml#l00303">TensorInfo.h:303</a></div></div>
<div class="ttc" id="_coordinates_8h_xhtml"><div class="ttname"><a href="_coordinates_8h.xhtml">Coordinates.h</a></div></div>
<div class="ttc" id="classarm__compute_1_1_tensor_info_xhtml_a1f4481a2c496ef1d176f305c25f50202"><div class="ttname"><a href="classarm__compute_1_1_tensor_info.xhtml#a1f4481a2c496ef1d176f305c25f50202">arm_compute::TensorInfo::set_format</a></div><div class="ttdeci">void set_format(Format format)</div><div class="ttdoc">Set the format of an already initialized tensor. </div></div>
<div class="ttc" id="classarm__compute_1_1_tensor_info_xhtml_ac437ef0718add962a4059fb3b3084c34"><div class="ttname"><a href="classarm__compute_1_1_tensor_info.xhtml#ac437ef0718add962a4059fb3b3084c34">arm_compute::TensorInfo::valid_region</a></div><div class="ttdeci">ValidRegion valid_region() const </div><div class="ttdoc">Valid region of the tensor. </div><div class="ttdef"><b>Definition:</b> <a href="_tensor_info_8h_source.xhtml#l00316">TensorInfo.h:316</a></div></div>
<div class="ttc" id="classarm__compute_1_1_dimensions_xhtml_a0f59f175e7682c7ed5f4ea30ef687834"><div class="ttname"><a href="classarm__compute_1_1_dimensions.xhtml#a0f59f175e7682c7ed5f4ea30ef687834">arm_compute::Dimensions::num_dimensions</a></div><div class="ttdeci">unsigned int num_dimensions() const </div><div class="ttdoc">Returns the effective dimensionality of the tensor. </div><div class="ttdef"><b>Definition:</b> <a href="_dimensions_8h_source.xhtml#l00108">Dimensions.h:108</a></div></div>
<div class="ttc" id="classarm__compute_1_1_tensor_info_xhtml_a8d37b60af520149481b2c7bbe1d829fd"><div class="ttname"><a href="classarm__compute_1_1_tensor_info.xhtml#a8d37b60af520149481b2c7bbe1d829fd">arm_compute::TensorInfo::extend_padding</a></div><div class="ttdeci">bool extend_padding(const PaddingSize &amp;padding)</div><div class="ttdoc">Update the offset to the first element, the strides and the total size. </div></div>
<div class="ttc" id="classarm__compute_1_1_tensor_info_xhtml_ad590b0e52b0574c9c2fce393ede1fa7a"><div class="ttname"><a href="classarm__compute_1_1_tensor_info.xhtml#ad590b0e52b0574c9c2fce393ede1fa7a">arm_compute::TensorInfo::offset_first_element_in_bytes</a></div><div class="ttdeci">size_t offset_first_element_in_bytes() const </div><div class="ttdoc">The offset from the beginning of the memory allocation to the first element of the tensor...</div><div class="ttdef"><b>Definition:</b> <a href="_tensor_info_8h_source.xhtml#l00207">TensorInfo.h:207</a></div></div>
<div class="ttc" id="classarm__compute_1_1_tensor_info_xhtml_a9f7c904411f0871ed5b37eecb1c03de2"><div class="ttname"><a href="classarm__compute_1_1_tensor_info.xhtml#a9f7c904411f0871ed5b37eecb1c03de2">arm_compute::TensorInfo::has_padding</a></div><div class="ttdeci">bool has_padding() const </div><div class="ttdoc">Checks if the tensor has been allocated with padding or not. </div><div class="ttdef"><b>Definition:</b> <a href="_tensor_info_8h_source.xhtml#l00295">TensorInfo.h:295</a></div></div>
<div class="ttc" id="classarm__compute_1_1_tensor_info_xhtml_a0c875a3203d902e2ad6bc3045355e69e"><div class="ttname"><a href="classarm__compute_1_1_tensor_info.xhtml#a0c875a3203d902e2ad6bc3045355e69e">arm_compute::TensorInfo::format</a></div><div class="ttdeci">Format format() const </div><div class="ttdoc">Colour format of the image. </div><div class="ttdef"><b>Definition:</b> <a href="_tensor_info_8h_source.xhtml#l00271">TensorInfo.h:271</a></div></div>
<div class="ttc" id="classarm__compute_1_1_tensor_info_xhtml"><div class="ttname"><a href="classarm__compute_1_1_tensor_info.xhtml">arm_compute::TensorInfo</a></div><div class="ttdoc">Store the tensor&amp;#39;s metadata. </div><div class="ttdef"><b>Definition:</b> <a href="_tensor_info_8h_source.xhtml#l00040">TensorInfo.h:40</a></div></div>
<div class="ttc" id="classarm__compute_1_1_tensor_info_xhtml_a21c2ae9fa438faf42669dadda628080c"><div class="ttname"><a href="classarm__compute_1_1_tensor_info.xhtml#a21c2ae9fa438faf42669dadda628080c">arm_compute::TensorInfo::TensorInfo</a></div><div class="ttdeci">TensorInfo()</div><div class="ttdoc">Default constructor. </div></div>
<div class="ttc" id="structarm__compute_1_1_valid_region_xhtml"><div class="ttname"><a href="structarm__compute_1_1_valid_region.xhtml">arm_compute::ValidRegion</a></div><div class="ttdef"><b>Definition:</b> <a href="_types_8h_source.xhtml#l00086">Types.h:86</a></div></div>
<div class="ttc" id="classarm__compute_1_1_tensor_info_xhtml_adcf156ba30ff118c28690671e83ea06b"><div class="ttname"><a href="classarm__compute_1_1_tensor_info.xhtml#adcf156ba30ff118c28690671e83ea06b">arm_compute::TensorInfo::operator=</a></div><div class="ttdeci">TensorInfo &amp; operator=(const TensorInfo &amp;)=default</div><div class="ttdoc">Allow instances of this class to be copied. </div></div>
<div class="ttc" id="classarm__compute_1_1_tensor_info_xhtml_a6b157a0e1ca25ef4d682d3bedfeae5f6"><div class="ttname"><a href="classarm__compute_1_1_tensor_info.xhtml#a6b157a0e1ca25ef4d682d3bedfeae5f6">arm_compute::TensorInfo::strides_in_bytes</a></div><div class="ttdeci">const Strides &amp; strides_in_bytes() const </div><div class="ttdoc">The strides in bytes for accessing each dimension of the tensor. </div><div class="ttdef"><b>Definition:</b> <a href="_tensor_info_8h_source.xhtml#l00198">TensorInfo.h:198</a></div></div>
<div class="ttc" id="namespacearm__compute_xhtml_ad8ed01ff3ff33333d8e19db4d2818bb6"><div class="ttname"><a href="namespacearm__compute.xhtml#ad8ed01ff3ff33333d8e19db4d2818bb6">arm_compute::DataType</a></div><div class="ttdeci">DataType</div><div class="ttdoc">Available data types. </div><div class="ttdef"><b>Definition:</b> <a href="_types_8h_source.xhtml#l00060">Types.h:60</a></div></div>
<div class="ttc" id="classarm__compute_1_1_tensor_info_xhtml_aac568c9183b365ddb66417b54ab8bf3d"><div class="ttname"><a href="classarm__compute_1_1_tensor_info.xhtml#aac568c9183b365ddb66417b54ab8bf3d">arm_compute::TensorInfo::fixed_point_pos</a></div><div class="ttdeci">size_t fixed_point_pos() const </div><div class="ttdoc">Fixed point position used when the tensor data type is S8, S16 or S32. </div><div class="ttdef"><b>Definition:</b> <a href="_tensor_info_8h_source.xhtml#l00223">TensorInfo.h:223</a></div></div>
<div class="ttc" id="classarm__compute_1_1_tensor_info_xhtml_ad13a67d4dbc337c707a76401dc103ff3"><div class="ttname"><a href="classarm__compute_1_1_tensor_info.xhtml#ad13a67d4dbc337c707a76401dc103ff3">arm_compute::TensorInfo::padding</a></div><div class="ttdeci">PaddingSize padding() const </div><div class="ttdoc">Padding of tensor. </div><div class="ttdef"><b>Definition:</b> <a href="_tensor_info_8h_source.xhtml#l00287">TensorInfo.h:287</a></div></div>
<div class="ttc" id="_tensor_shape_8h_xhtml"><div class="ttname"><a href="_tensor_shape_8h.xhtml">TensorShape.h</a></div></div>
<div class="ttc" id="classarm__compute_1_1_tensor_info_xhtml_a38382dc1f04d28cab04d921b8324dc07"><div class="ttname"><a href="classarm__compute_1_1_tensor_info.xhtml#a38382dc1f04d28cab04d921b8324dc07">arm_compute::TensorInfo::num_dimensions</a></div><div class="ttdeci">size_t num_dimensions() const </div><div class="ttdoc">The number of dimensions of the tensor (rank) </div><div class="ttdef"><b>Definition:</b> <a href="_tensor_info_8h_source.xhtml#l00239">TensorInfo.h:239</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_214608ef36d61442cb2b0c1c4e9a7def.xhtml">arm_compute</a></li><li class="navelem"><a class="el" href="dir_1fb090f0c6070330bfaccc4236d3ca0d.xhtml">core</a></li><li class="navelem"><a class="el" href="_tensor_info_8h.xhtml">TensorInfo.h</a></li>
    <li class="footer">Generated on Wed May 3 2017 17:20:04 for ARM Compute Library by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.11 </li>
  </ul>
</div>
</body>
</html>
